@page "/personalAccountCredentials/{accountId}"
@using Microsoft.Extensions.Logging
@using System.Text
@using Newtonsoft.Json
@inject ILogger<Index> Logger
@inject NavigationManager UriHelper
@inject HttpClient _httpClient

<PageTitle>Personal Account Credentials</PageTitle>

<h1>Personal Account Credentials</h1>
<br/>

<EditForm Model="@credentialModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>Email: </div>    
    <InputText id="name" @bind-Value="credentialModel.Email" />
    <div>Password: </div>    
    <InputText id="name" @bind-Value="credentialModel.Password" />
    <div>Security Question: </div>    
    <InputText id="name" @bind-Value="credentialModel.SecurityQuestion" />
    <div>Security Answer: </div>    
    <InputText id="name" @bind-Value="credentialModel.SecurityAnswer" />
    <div>Health Data Notice: </div>    
    <InputText id="name" @bind-Value="credentialModel.HealthDataNotice" />
    <div>Terms of Use: </div>    
    <InputText id="name" @bind-Value="credentialModel.TermsOfUse" />
    <br/>
    <br/>
    <button type="submit">Next</button>
</EditForm>

@code {
    [Parameter]
    public string accountId{ get; set; }

    private CredentialModel credentialModel = new();

    private async Task HandleValidSubmit()
    {
        credentialModel.AccountId = accountId;

        var response = await _httpClient.PostAsync($"https://localhost:7083/api/Accounts/personal/completePersonalAccount", 
            new StringContent(JsonConvert.SerializeObject(credentialModel), Encoding.UTF8, "application/json"));

        if (!response.IsSuccessStatusCode)
        {
            Logger.LogInformation($"addPersonalAccountInformation failed for {accountId}");
        }

        UriHelper.NavigateTo($"/personalAccountCreated/{accountId}");
    }

    public class CredentialModel
    {
        public string AccountId { get; set; } = "AccountId1";
        public string Email { get; set; } = "adm.dymitruk@gamil.com";
        public string Password { get; set; } = "good passoword";
        public string SecurityQuestion { get; set; } = "favorite modeling technique";
        public string SecurityAnswer { get; set; } = "Event Modeling";
        public string HealthDataNotice { get; set; } = "true";
        public string TermsOfUse { get; set; } = "true";
    }
}
